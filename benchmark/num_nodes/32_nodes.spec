define num_events: Signal<Int> := literal(1000)

define add_calls: Events<Unit> := function_calls("add")

define add_call_sum: Signal<Int> := eventCount(add_calls)

define overhead_0: Signal<Int> := signalAbs(add_call_sum)
define overhead_1: Signal<Int> := signalAbs(overhead_0)
define overhead_2: Signal<Int> := signalAbs(overhead_1)
define overhead_3: Signal<Int> := signalAbs(overhead_2)
define overhead_4: Signal<Int> := signalAbs(overhead_3)
define overhead_5: Signal<Int> := signalAbs(overhead_4)
define overhead_6: Signal<Int> := signalAbs(overhead_5)
define overhead_7: Signal<Int> := signalAbs(overhead_6)
define overhead_8: Signal<Int> := signalAbs(overhead_7)
define overhead_9: Signal<Int> := signalAbs(overhead_8)
define overhead_10: Signal<Int> := signalAbs(overhead_9)
define overhead_11: Signal<Int> := signalAbs(overhead_10)
define overhead_12: Signal<Int> := signalAbs(overhead_11)
define overhead_13: Signal<Int> := signalAbs(overhead_12)
define overhead_14: Signal<Int> := signalAbs(overhead_13)
define overhead_15: Signal<Int> := signalAbs(overhead_14)
define overhead_16: Signal<Int> := signalAbs(overhead_15)
define overhead_17: Signal<Int> := signalAbs(overhead_16)
define overhead_18: Signal<Int> := signalAbs(overhead_17)
define overhead_19: Signal<Int> := signalAbs(overhead_18)
define overhead_20: Signal<Int> := signalAbs(overhead_19)
define overhead_21: Signal<Int> := signalAbs(overhead_20)
define overhead_22: Signal<Int> := signalAbs(overhead_21)
define overhead_23: Signal<Int> := signalAbs(overhead_22)
define overhead_24: Signal<Int> := signalAbs(overhead_23)
define overhead_25: Signal<Int> := signalAbs(overhead_24)
define overhead_26: Signal<Int> := signalAbs(overhead_25)
define overhead_27: Signal<Int> := signalAbs(overhead_26)
define overhead_28: Signal<Int> := signalAbs(overhead_27)

define finished: Signal<Boolean> := eq(overhead_28, num_events)

